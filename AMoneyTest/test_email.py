import pytest
import requests
import psycopg2
from appium import webdriver
from appium.webdriver.common.appiumby import AppiumBy
from appium.options.android import UiAutomator2Options
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException
import time

# üîπ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Appium
capabilities = {
    "platformName": "Android",
    "automationName": "uiautomator2",
    "deviceName": "emulator-5554"
}
capabilities_options = UiAutomator2Options().load_capabilities(capabilities)
appium_server_url = "http://localhost:4723"


# üîπ –§–∏–∫—Å—Ç—É—Ä–∞ –¥–ª—è –¥—Ä–∞–π–≤–µ—Ä–∞
@pytest.fixture(scope="module")
def driver():
    app_driver = webdriver.Remote(appium_server_url, options=capabilities_options)
    yield app_driver
    app_driver.quit()


# üîπ –§–∏–∫—Å—Ç—É—Ä–∞ –¥–ª—è –ë–î
@pytest.fixture(scope="module")
def db_connection():
    conn = psycopg2.connect(
        dbname="test_email",
        user="postgres",
        password="qwerty123",
        host="localhost",
        port="5432"
    )
    yield conn
    conn.rollback()  # –û—Ç–∫–∞—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∞
    conn.close()


def open_AMoney(driver):
    aps = driver.find_element(by=AppiumBy.XPATH, value="//*[contains(@text, '–ê –¥–µ–Ω—å–≥–∏')]")
    aps.click()

def onbording(driver):
    # –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ—è–≤–ª–µ–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
    el_onbording1 = WebDriverWait(driver, 10).until(
        EC.visibility_of_element_located((AppiumBy.XPATH, '//android.widget.TextView[@resource-id="ru.adengi:id/textDescription"]'))
    )
    txt = el_onbording1.text
    expected_text = "–ü–æ–ª—å–∑—É–π—Ç–µ—Å—å –¥–µ–Ω—å–≥–∞–º–∏\n–±–µ–∑ –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤"
    assert txt == expected_text, f"–û–∂–∏–¥–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç '{expected_text}', –Ω–æ –Ω–∞–π–¥–µ–Ω: '{txt}'"
    button = driver.find_element(by=AppiumBy.ID, value= 'ru.adengi:id/buttonNext')
    button.click()

    # –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ—è–≤–ª–µ–Ω–∏—è –≤—Ç–æ—Ä–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
    el_onbording2 = WebDriverWait(driver, 10).until(
        EC.visibility_of_element_located((AppiumBy.XPATH, '//android.widget.TextView[@resource-id="ru.adengi:id/textDescription"]'))
    )
    txt = el_onbording2.text
    expected_text = "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∫–æ—Ä–æ—Ç–∫—É—é –∞–Ω–∫–µ—Ç—É\n–∏ –ø–æ–ª—É—á–∏—Ç–µ –¥–µ–Ω—å–≥–∏ –Ω–∞ –∫–∞—Ä—Ç—É –ª—é–±–æ–≥–æ –±–∞–Ω–∫–∞"
    assert txt == expected_text, f"–û–∂–∏–¥–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç '{expected_text}', –Ω–æ –Ω–∞–π–¥–µ–Ω: '{txt}'"
    button = driver.find_element(by=AppiumBy.ID, value='ru.adengi:id/buttonNext')
    button.click()

    # –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ—è–≤–ª–µ–Ω–∏—è —Ç—Ä–µ—Ç—å–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
    txt_onbording3 = WebDriverWait(driver, 10).until(
        EC.visibility_of_element_located((AppiumBy.XPATH, '//android.widget.TextView[@resource-id="ru.adengi:id/textDescription"]'))
    )
    txt = txt_onbording3.text
    expected_text = "–ú–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∑–∞—ë–º\n–¥–∞–∂–µ —Å –ø–ª–æ—Ö–æ–π –∫—Ä–µ–¥–∏—Ç–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–µ–π"
    assert txt == expected_text, f"–û–∂–∏–¥–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç '{expected_text}', –Ω–æ –Ω–∞–π–¥–µ–Ω: '{txt}'"
    button = driver.find_element(by=AppiumBy.ID, value='ru.adengi:id/buttonNext')
    button.click()

    # –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ—è–≤–ª–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ —Å–æ–≥–ª–∞—Å–∏—è
    txt_agreement = WebDriverWait(driver, 10).until(
        EC.visibility_of_element_located((AppiumBy.ID, 'ru.adengi:id/text_policy'))
    )
    txt = txt_agreement.text
    expected_text = "–í —Ü–µ–ª—è—Ö –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ —Å–±–æ—Ä, –æ–±—Ä–∞–±–æ—Ç–∫—É –∏ —Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö:\n–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ê–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã, –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∏ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ - —Å–æ–±–∏—Ä–∞—é—Ç—Å—è –∏ —Ö—Ä–∞–Ω—è—Ç—Å—è —Å —Ü–µ–ª—å—é –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–∞, –ø–æ–≤—ã—à–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –§–µ–¥–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∑–∞–∫–æ–Ω–∞ –æ—Ç 27.07.2006 ‚Ññ 152-–§–ó ¬´–û –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö¬ª. –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞, –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π> - —Å–æ–±–∏—Ä–∞—é—Ç—Å—è –∏ —Ö—Ä–∞–Ω—è—Ç—Å—è —Å —Ü–µ–ª—å—é –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–∞, –ø–æ–≤—ã—à–µ–Ω–∏—è —É—Ä–æ–≤–Ω—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –ø–æ–≤—ã—à–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è.\n\n–û–±—Ä–∞—â–∞–µ–º –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å —É–∫–∞–∑–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–∞–ª–µ–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.\n\n–ò–Ω—Ñ–æ—Ä–º–∏—Ä—É–µ–º —Ç–∞–∫–∂–µ, —á—Ç–æ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ —Ç–µ—Ö —Å–ª—É—á–∞—è—Ö, –∫–æ–≥–¥–∞ –ø–æ–ª—É—á–µ–Ω–æ —Å–æ–≥–ª–∞—Å–∏–µ —Å—É–±—ä–µ–∫—Ç–∞ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö. –ü—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–∞–≤–æ–≤—ã–µ, –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω—ã–µ –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –º–µ—Ä—ã –¥–ª—è –∑–∞—â–∏—Ç—ã –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ—Ç –Ω–µ–ø—Ä–∞–≤–æ–º–µ—Ä–Ω–æ–≥–æ –∏–ª–∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –Ω–∏–º, —É–Ω–∏—á—Ç–æ–∂–µ–Ω–∏—è, –∏–∑–º–µ–Ω–µ–Ω–∏—è, –±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∏—è, –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è, —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, –∞ —Ç–∞–∫–∂–µ –æ—Ç –∏–Ω—ã—Ö –Ω–µ–ø—Ä–∞–≤–æ–º–µ—Ä–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏ —Å—Ç.19 –§–µ–¥–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∑–∞–∫–æ–Ω–∞ –æ—Ç 27 –∏—é–ª—è 2006 –≥. ‚Ññ 152-–§–ó ¬´–û –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö¬ª. –•—Ä–∞–Ω–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç—Å—è —Å —É—á–µ—Ç–æ–º –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞ –∏—Ö –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏."
    assert txt == expected_text, f"–û–∂–∏–¥–∞–µ–º—ã–π —Ç–µ–∫—Å—Ç '{expected_text}', –Ω–æ –Ω–∞–π–¥–µ–Ω: '{txt}'"
    button = driver.find_element(by=AppiumBy.ID, value='ru.adengi:id/buttonNext')
    button.click()

    # –û–∂–∏–¥–∞–Ω–∏–µ –ø–æ—è–≤–ª–µ–Ω–∏—è push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    push_desk_txt = WebDriverWait(driver, 10).until(
        EC.visibility_of_element_located((AppiumBy.ID, 'ru.adengi:id/description'))
    )
    button_decline = driver.find_element(by=AppiumBy.ID, value='ru.adengi:id/declineButton')
    button_decline.click()
#–í–æ—Ç —ç—Ç–æ –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∞—Ç—å
def fast_registration_skip(driver):
    button_get_money = WebDriverWait(driver, 10).until(
        EC.element_to_be_clickable((AppiumBy.ID, 'ru.adengi:id/buttonGetMoney'))
    )
    button_get_money.click()

    # –ñ–¥–µ–º –ø–æ—è–≤–ª–µ–Ω–∏—è –ø–æ–ª—è –∏ —Å—á–∏—Ç—ã–≤–∞–µ–º –Ω–æ–º–µ—Ä
    phone_element = WebDriverWait(driver, 10).until(
        EC.presence_of_element_located((AppiumBy.ID, "ru.adengi:id/editTextPhone"))
    )
    phone_number = phone_element.text.strip()

    print(f"üì± –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phone_number}")

    button_continue_1 = WebDriverWait(driver, 10).until(
    EC.visibility_of_element_located(
        (AppiumBy.XPATH, '//android.widget.Button[@resource-id="ru.adengi:id/buttonContinue"]')))
    button_continue_1.click()

    button_continue_2 = WebDriverWait(driver, 10).until(
        EC.visibility_of_element_located(
            (AppiumBy.XPATH, '//android.widget.Button[@resource-id="ru.adengi:id/buttonContinue"]')))
    button_continue_2.click()

    button_continue_3 = WebDriverWait(driver, 10).until(
        EC.visibility_of_element_located(
            (AppiumBy.XPATH, '//android.widget.Button[@resource-id="ru.adengi:id/continueButton"]')))
    button_continue_3.click()

    button_continue_4 = WebDriverWait(driver, 10).until(
        EC.visibility_of_element_located(
            (AppiumBy.XPATH, '//android.widget.Button[@resource-id="ru.adengi:id/buttonContinue"]')))
    button_continue_4.click()

    button_continue_5 = WebDriverWait(driver, 10).until(
        EC.visibility_of_element_located(
            (AppiumBy.XPATH, '//android.widget.Button[@resource-id="ru.adengi:id/buttonAction"]')))
    button_continue_5.click()

    return phone_number


# üîπ –§–∏–∫—Å—Ç—É—Ä–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (—Ä–µ–∑—É–ª—å—Ç–∞—Ç test_fast_reg)
@pytest.fixture(scope="module")
def registered_phone_number(driver):
    """–ü—Ä–æ—Ö–æ–¥–∏—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"""
    open_AMoney(driver)
    onbording(driver)
    return fast_registration_skip(driver)
    assert phone_number, "–û—à–∏–±–∫–∞! –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–µ –ø–æ–ª—É—á–µ–Ω."



# üîπ –§–∏–∫—Å—Ç—É—Ä–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞
@pytest.fixture(scope="module")
def access_token(registered_phone_number):
    TOKEN_URL = "https://stage01.adengi.tech/api/v1/oauth/token"
    data = {
        "client_id": 100,
        "client_secret": "secret",
        "grant_type": "password",
        "password": "123456",
        "username": registered_phone_number
    }

    response = requests.post(TOKEN_URL, json=data)
    assert response.status_code == 200, f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {response.status_code}, {response.text}"

    tokens = response.json()
    ACCESS_TOKEN = tokens.get("access_token")
    assert ACCESS_TOKEN, "–û—à–∏–±–∫–∞! Access token –Ω–µ –ø–æ–ª—É—á–µ–Ω."

    return ACCESS_TOKEN  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–∫–µ–Ω –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ —Å–ª–µ–¥—É—é—â–∏—Ö —Ç–µ—Å—Ç–∞—Ö


# üîπ –¢–µ—Å—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–µ—Ä–≤—ã–º)



# üîπ –¢–µ—Å—Ç API-–∑–∞–ø—Ä–æ—Å–∞ (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏)
def test_get_client_info(access_token):
    URL = "https://stage01.adengi.tech/api/v1/client/me"
    HEADERS = {"Authorization": f"Bearer {access_token}"}

    response = requests.get(URL, headers=HEADERS)
    assert response.status_code == 200, f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {response.status_code}, {response.text}"

    data = response.json()
    client_id = data.get("client", {}).get("client", {}).get("id")
    assert client_id, "–û—à–∏–±–∫–∞! client_id –Ω–µ –ø–æ–ª—É—á–µ–Ω."

    print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω client_id: {client_id}")


# üîπ –¢–µ—Å—Ç —Ä–∞–±–æ—Ç—ã —Å –ë–î (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç client_id)
def test_find_user(db_connection, access_token):
    cursor = db_connection.cursor()

    # –ü–æ–ª—É—á–∞–µ–º client_id —á–µ—Ä–µ–∑ API
    URL = "https://stage01.adengi.tech/api/v1/client/me"
    HEADERS = {"Authorization": f"Bearer {access_token}"}
    response = requests.get(URL, headers=HEADERS)
    data = response.json()
    client_id = data.get("client", {}).get("client", {}).get("id")

    assert client_id, "–û—à–∏–±–∫–∞! client_id –Ω–µ –ø–æ–ª—É—á–µ–Ω."

    # –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    cursor.execute("SELECT id, client_id, email, type FROM email_confirmation WHERE client_id = %s", (client_id,))
    user = cursor.fetchone()
    assert user, "–û—à–∏–±–∫–∞! –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ email_confirmation."

    email_confirmation_id = user[0]
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ID: {user[0]}, Client ID: {user[1]}, Email: {user[2]}, Type: {user[3]}")

    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    cursor.execute(
        "SELECT id, email_confirmation_id, code FROM email_confirmation_codes WHERE email_confirmation_id = %s",
        (email_confirmation_id,))
    verification = cursor.fetchone()
    assert verification, "–û—à–∏–±–∫–∞! –ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω."

    verification_id = verification[0]
    new_code = "333333"

    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥ –≤ –ë–î
    cursor.execute("UPDATE email_confirmation_codes SET code = %s WHERE id = %s", (new_code, verification_id))
    db_connection.commit()
    print(f"‚úÖ –ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω: {new_code}")

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–¥ –≤ API
    post_url = "https://stage01.adengi.tech/api/v1/email_confirmation/confirm"
    post_headers = {
        "Authorization": f"Bearer {access_token}",
        "Content-Type": "application/json"
    }
    post_body = {"code": new_code}

    post_response = requests.post(post_url, headers=post_headers, json=post_body)
    assert post_response.status_code == 200, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏: {post_response.status_code}, {post_response.text}"
    print(f"‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ: {post_response.json()}")


